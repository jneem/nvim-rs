use futures::Future;
use rmp_rpc::Value;
use super::*;
impl NvimClient {
	nvim_api_function!(ui_attach, "nvim_ui_attach", width: i64, height: i64, options: Map; ());
	nvim_api_function!(ui_detach, "nvim_ui_detach", ; ());
	nvim_api_function!(ui_try_resize, "nvim_ui_try_resize", width: i64, height: i64; ());
	nvim_api_function!(ui_set_option, "nvim_ui_set_option", name: String, value: Value; ());
	nvim_api_function!(command, "nvim_command", command: String; ());
	nvim_api_function!(get_hl_by_name, "nvim_get_hl_by_name", name: String, rgb: bool; Map);
	nvim_api_function!(get_hl_by_id, "nvim_get_hl_by_id", hl_id: i64, rgb: bool; Map);
	nvim_api_function!(feedkeys, "nvim_feedkeys", keys: String, mode: String, escape_csi: bool; ());
	nvim_api_function!(input, "nvim_input", keys: String; i64);
	nvim_api_function!(replace_termcodes, "nvim_replace_termcodes", str: String, from_part: bool, do_lt: bool, special: bool; String);
	nvim_api_function!(command_output, "nvim_command_output", str: String; String);
	nvim_api_function!(eval, "nvim_eval", expr: String; Value);
	nvim_api_function!(call_function, "nvim_call_function", fname: String, args: Vec<Value>; Value);
	nvim_api_function!(execute_lua, "nvim_execute_lua", code: String, args: Vec<Value>; Value);
	nvim_api_function!(strwidth, "nvim_strwidth", text: String; i64);
	nvim_api_function!(list_runtime_paths, "nvim_list_runtime_paths", ; Vec<String>);
	nvim_api_function!(set_current_dir, "nvim_set_current_dir", dir: String; ());
	nvim_api_function!(get_current_line, "nvim_get_current_line", ; String);
	nvim_api_function!(set_current_line, "nvim_set_current_line", line: String; ());
	nvim_api_function!(del_current_line, "nvim_del_current_line", ; ());
	nvim_api_function!(get_var, "nvim_get_var", name: String; Value);
	nvim_api_function!(set_var, "nvim_set_var", name: String, value: Value; ());
	nvim_api_function!(del_var, "nvim_del_var", name: String; ());
	nvim_api_function!(get_vvar, "nvim_get_vvar", name: String; Value);
	nvim_api_function!(get_option, "nvim_get_option", name: String; Value);
	nvim_api_function!(set_option, "nvim_set_option", name: String, value: Value; ());
	nvim_api_function!(out_write, "nvim_out_write", str: String; ());
	nvim_api_function!(err_write, "nvim_err_write", str: String; ());
	nvim_api_function!(err_writeln, "nvim_err_writeln", str: String; ());
	nvim_api_function!(list_bufs, "nvim_list_bufs", ; Vec<Buffer<'client>>);
	nvim_api_function!(get_current_buf, "nvim_get_current_buf", ; Buffer<'client>);
	nvim_api_function!(set_current_buf, "nvim_set_current_buf", buffer: Buffer<'client>; ());
	nvim_api_function!(list_wins, "nvim_list_wins", ; Vec<Window<'client>>);
	nvim_api_function!(get_current_win, "nvim_get_current_win", ; Window<'client>);
	nvim_api_function!(set_current_win, "nvim_set_current_win", window: Window<'client>; ());
	nvim_api_function!(list_tabpages, "nvim_list_tabpages", ; Vec<Tabpage<'client>>);
	nvim_api_function!(get_current_tabpage, "nvim_get_current_tabpage", ; Tabpage<'client>);
	nvim_api_function!(set_current_tabpage, "nvim_set_current_tabpage", tabpage: Tabpage<'client>; ());
	nvim_api_function!(subscribe, "nvim_subscribe", event: String; ());
	nvim_api_function!(unsubscribe, "nvim_unsubscribe", event: String; ());
	nvim_api_function!(get_color_by_name, "nvim_get_color_by_name", name: String; i64);
	nvim_api_function!(get_color_map, "nvim_get_color_map", ; Map);
	nvim_api_function!(get_mode, "nvim_get_mode", ; Map);
	nvim_api_function!(get_keymap, "nvim_get_keymap", mode: String; Vec<Map>);
	nvim_api_function!(get_api_info, "nvim_get_api_info", ; Vec<Value>);
	nvim_api_function!(call_atomic, "nvim_call_atomic", calls: Vec<Value>; Vec<Value>);
}
nvim_type!(Tabpage);
impl<'client> Tabpage<'client> {
	nvim_api_method!(list_wins, "nvim_tabpage_list_wins", ; Vec<Window<'client>>);
	nvim_api_method!(get_var, "nvim_tabpage_get_var", name: String; Value);
	nvim_api_method!(set_var, "nvim_tabpage_set_var", name: String, value: Value; ());
	nvim_api_method!(del_var, "nvim_tabpage_del_var", name: String; ());
	nvim_api_method!(get_win, "nvim_tabpage_get_win", ; Window<'client>);
	nvim_api_method!(get_number, "nvim_tabpage_get_number", ; i64);
	nvim_api_method!(is_valid, "nvim_tabpage_is_valid", ; bool);
}
nvim_type!(Buffer);
impl<'client> Buffer<'client> {
	nvim_api_method!(line_count, "nvim_buf_line_count", ; i64);
	nvim_api_method!(get_lines, "nvim_buf_get_lines", start: i64, end: i64, strict_indexing: bool; Vec<String>);
	nvim_api_method!(set_lines, "nvim_buf_set_lines", start: i64, end: i64, strict_indexing: bool, replacement: Vec<String>; ());
	nvim_api_method!(get_var, "nvim_buf_get_var", name: String; Value);
	nvim_api_method!(get_changedtick, "nvim_buf_get_changedtick", ; i64);
	nvim_api_method!(get_keymap, "nvim_buf_get_keymap", mode: String; Vec<Map>);
	nvim_api_method!(set_var, "nvim_buf_set_var", name: String, value: Value; ());
	nvim_api_method!(del_var, "nvim_buf_del_var", name: String; ());
	nvim_api_method!(get_option, "nvim_buf_get_option", name: String; Value);
	nvim_api_method!(set_option, "nvim_buf_set_option", name: String, value: Value; ());
	nvim_api_method!(get_name, "nvim_buf_get_name", ; String);
	nvim_api_method!(set_name, "nvim_buf_set_name", name: String; ());
	nvim_api_method!(is_valid, "nvim_buf_is_valid", ; bool);
	nvim_api_method!(get_mark, "nvim_buf_get_mark", name: String; (i64, i64));
	nvim_api_method!(add_highlight, "nvim_buf_add_highlight", src_id: i64, hl_group: String, line: i64, col_start: i64, col_end: i64; i64);
	nvim_api_method!(clear_highlight, "nvim_buf_clear_highlight", src_id: i64, line_start: i64, line_end: i64; ());
}
nvim_type!(Window);
impl<'client> Window<'client> {
	nvim_api_method!(get_buf, "nvim_win_get_buf", ; Buffer<'client>);
	nvim_api_method!(get_cursor, "nvim_win_get_cursor", ; (i64, i64));
	nvim_api_method!(set_cursor, "nvim_win_set_cursor", pos: (i64, i64); ());
	nvim_api_method!(get_height, "nvim_win_get_height", ; i64);
	nvim_api_method!(set_height, "nvim_win_set_height", height: i64; ());
	nvim_api_method!(get_width, "nvim_win_get_width", ; i64);
	nvim_api_method!(set_width, "nvim_win_set_width", width: i64; ());
	nvim_api_method!(get_var, "nvim_win_get_var", name: String; Value);
	nvim_api_method!(set_var, "nvim_win_set_var", name: String, value: Value; ());
	nvim_api_method!(del_var, "nvim_win_del_var", name: String; ());
	nvim_api_method!(get_option, "nvim_win_get_option", name: String; Value);
	nvim_api_method!(set_option, "nvim_win_set_option", name: String, value: Value; ());
	nvim_api_method!(get_position, "nvim_win_get_position", ; (i64, i64));
	nvim_api_method!(get_tabpage, "nvim_win_get_tabpage", ; Tabpage<'client>);
	nvim_api_method!(get_number, "nvim_win_get_number", ; i64);
	nvim_api_method!(is_valid, "nvim_win_is_valid", ; bool);
}
